name: CI-CD_Pipeline-to-AWS-Elastic_Beanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "mfine-github-actions"
  EB_APPLICATION_NAME: "PyGame_app"
  EB_ENVIRONMENT_NAME: "PyGame_app-env"
  DEPLOY_PACKAGE_NAME: "PyGame_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-east-2"
 
on:
  push:
    branches:
      - main

jobs:
  my_ci_part:
    runs-on: ubuntu-latest
    
    steps:
       - name:  Git clone our repo  
         uses:  actions/checkout@v1
         
       - name: Create ZIP deployment package
         run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
       - name: Configure my AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }} 
           aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }} 
           aws-region: ${{ env.AWS_REGION_NAME }}
          
       - name: copy deployment package to S3 bucket
         run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/    
       
       - name: Print finish message
         run: echo "CI Finished succesfully !"

  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]
    
    steps:
       - name: Configure my AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }} 
           aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }} 
           aws-region: ${{ env.AWS_REGION_NAME }}    

       - name: Create new Elastic Beanstalk application
         run: |
           aws elasticbeanstalk create-application-version \
           --aplication-name ${{ env.EB_APPLICATION_NAME }} \
           --source-bundle S3bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3key="${{ env.DEPLOY_PACKAGE_NAME }}" \
           --version-label "Ver-${{ github.sha }}" \
           --description "CommitSHA-"${{ github.sha }}"
     
       - name: Deploy new Elastic Beanstalk application version
         run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"

       - name: Print finish message
         run: echo "CD Finished succesfully !"


